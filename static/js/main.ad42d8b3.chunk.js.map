{"version":3,"sources":["components/Luke.tsx","pages/kalenderPage.tsx","pages/kalenderSelection.tsx","pages/lukePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Luke","params","to","number","toString","className","genererLuker","dates","person","array","randomIndex","currentIndex","length","Math","floor","random","shuffle","map","date","index","Kalender","luker","lukeDates","KalenderSelection","names","alternaltiv","personer","name","LukePage","lukeID","useParams","undefined","App","antallLuker","lukeTider","startDato","antall","datoer","i","push","Date","getFullYear","getMonth","getDate","genererDatoer","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OA6BeA,MATf,SAAcC,GAEV,OACI,cAAC,IAAD,CAAMC,IAXDC,EAWSF,EAAOE,OANlB,KAAKA,EAAOC,YAMeC,UAAU,OAAxC,SACCJ,EAAOE,SAZhB,IAAaA,GCHb,SAASG,EAAaC,EAAcC,GAChC,OAIJ,SAAiBC,GACb,IAAkCC,EAA9BC,EAAeF,EAAMG,OAGzB,KAAwB,IAAjBD,GAAoB,CAGzBD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GACzCA,IAJyB,MAOmB,CAC1CF,EAAMC,GAAcD,EAAME,IAD3BF,EAAME,GAPkB,KAOHF,EAAMC,GAPH,KAW3B,OAAOD,EAnBAO,CAAQT,EAAMU,KAAI,SAACC,EAAMC,GAAW,OAAO,cAAC,EAAD,CAAMhB,OAAQgB,EAAM,EAAGD,KAAMA,EAAMV,OAAQA,QAmClFY,MAbf,SAAkBnB,GACd,IAAMoB,EAAQf,EAAaL,EAAOqB,UAAUrB,EAAOO,QAEnD,OACI,sBAAKH,UAAU,eAAf,UACI,mDACA,qBAAKA,UAAU,WAAf,SACKgB,QCTFE,MAXf,SAA2BtB,GAEvB,IAVgBuB,EAUVC,GAVUD,EAUcvB,EAAOyB,UATxBT,KAAI,SAACU,EAAKR,GACnB,OAAO,cAAC,IAAD,CAAMjB,GAAI,MAAMyB,EAAKvB,WAAwBC,UAAU,iBAAvD,SACFmB,EAAML,IADkCA,MASjD,OACI,qBAAKd,UAAU,oBAAf,SACKoB,KCYEG,MAnBf,SAAkB3B,GACd,IAAM4B,EAAUC,cAAVD,OAGN,YAAeE,IAAXF,EACO,qBAAKxB,UAAU,WAAf,4BAOP,sBAAKA,UAAU,WAAf,qBACawB,EAhBV,UCuBIG,MAnBf,WACE,IAAMC,EAAc,GACdC,EARR,SAAuBC,EAAiBC,GAEtC,IADA,IAAMC,EAAgB,GACbC,EAAI,EAAGA,EAAIF,EAAQE,IAAKD,EAAOE,KAAK,IAAIC,KAAKL,EAAUM,cAAcN,EAAUO,WAAYP,EAAUQ,UAAU,IACxH,OAAON,EAKWO,CAAc,IAAIJ,KAAK,KAAK,GAAG,IAAI,IAC/Cd,EAAW,CAAC,WAAW,SAAS,WACtC,OAAO,qBAAKrB,UAAU,MAAf,SACL,cAAC,IAAD,UACE,eAAC,IAAD,WACA,cAAC,IAAD,CAAOwC,KAAK,YAAYC,QAAS,cAAC,EAAD,CAAU3C,OAAQ8B,EAAaX,UAAWY,EAAW1B,OAAQkB,EAAS,OACvG,cAAC,IAAD,CAAOmB,KAAK,oBAAoBC,QAAS,cAAC,EAAD,CAAU3C,OAAQ8B,EAAaX,UAAWY,MACnF,cAAC,IAAD,CAAOW,KAAK,UAAUC,QAAS,cAAC,EAAD,CAAU3C,OAAQ8B,EAAaX,UAAWY,EAAW1B,OAAQkB,EAAS,OACrG,cAAC,IAAD,CAAOmB,KAAK,kBAAkBC,QAAS,cAAC,EAAD,CAAU3C,OAAQ8B,EAAaX,UAAWY,MACjF,cAAC,IAAD,CAAOW,KAAK,WAAWC,QAAS,cAAC,EAAD,CAAU3C,OAAQ8B,EAAaX,UAAWY,EAAW1B,OAAQkB,EAAS,OACtG,cAAC,IAAD,CAAOmB,KAAK,mBAAmBC,QAAS,cAAC,EAAD,CAAU3C,OAAQ8B,EAAaX,UAAWY,MAClF,cAAC,IAAD,CAAOW,KAAK,UAAUC,QAAS,cAAC,EAAD,CAAmB3C,OAAQ,EAAGuB,SAAUA,cCjB9DqB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ad42d8b3.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n//import SimpleCrypto from \"simple-crypto-js\";\n\n\n\ninterface LukeParams {\n    number: number,\n    date: Date,\n    person: String\n}\n\nfunction url(number:number) {\n    //SimpleCrypto seems timebased, need redux to keep instans over entire project\n    //const secretKey = \"advent\";\n    //const simpleCrypto = new SimpleCrypto(secretKey);\n\n    return \"./\"+number.toString();//+simpleCrypto.encrypt(number.toString());\n}\n\nfunction Luke(params: LukeParams) {\n\n    return (\n        <Link to={url(params.number)} className=\"Luke\">\n        {params.number}\n        </Link>\n    );\n}\n\nexport default Luke;","import React from 'react';\nimport Luke from '../components/Luke';\n\ninterface kalenderParams {\n    number: number,\n    lukeDates: Date[],\n    person: String\n}\n\nfunction genererLuker(dates:Date[], person: String){\n    return shuffle(dates.map((date ,index) => {return <Luke number={index+1} date={date} person={person}/>}));\n}\n\n//borrowed from https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\nfunction shuffle(array:JSX.Element[]) {\n    let currentIndex = array.length,  randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n  \n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n  \n    return array;\n  }\n\nfunction Kalender(params: kalenderParams) {\n    const luker = genererLuker(params.lukeDates,params.person);//(5,[new Date(2021,11,21),new Date(2021,11,22),new Date(2021,11,23),new Date(2021,11,24),new Date(2021,11,25)])\n\n    return (\n        <div className=\"KalenderPage\">\n            <h1 >JULEKALENDER 2021</h1>\n            <div className=\"Kalender\">\n                {luker}\n            </div>\n        </div>\n    );\n}\n\nexport default Kalender;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface kalenderSelectionParams {\n    number: number,\n    personer: String[]\n}\n\n\n\n\nfunction kalAltern( names:String[]){\n    return names.map((name,index) => {\n        return <Link to={\"../\"+name.toString()} key={index} className=\"KalenderOption\">\n            {names[index]}\n        </Link>\n    })\n}\n\nfunction KalenderSelection(params: kalenderSelectionParams) {\n\n    const alternaltiv = kalAltern(params.personer);\n    return (\n        <div className=\"KalenderSelection\">\n            {alternaltiv}\n        </div>\n\n    );\n}\n\nexport default KalenderSelection;","import React from 'react';\nimport { \n    useParams\n} from \"react-router-dom\";\n//import SimpleCrypto from \"simple-crypto-js\";\n\n\n\ninterface lukePageParams {\n    number: number,\n    lukeDates: Date[]\n}\n\nfunction lukeInnhold(lukeNumber: String){\n    return \"hei\";//({\"tekst\":\"heihei\",\"video\":\"https://www.youtube.com/watch?v=6ta_sftSfIw\", \"bilde\":\"../images/testimage.png\"});\n}\n\nfunction LukePage(params: lukePageParams) {\n    let { lukeID} = useParams();\n    //const secretKey = \"advent\";\n    //const simpleCrypto = new SimpleCrypto(secretKey)\n    if (lukeID === undefined){\n        return <div className=\"LukePage\">\n        ingen luke her\n        </div>\n    }\n    const innhold = lukeInnhold(lukeID);\n\n    return (\n        <div className=\"LukePage\">\n            luke nr {lukeID}\n            {innhold}\n        </div>\n    );\n}\n\nexport default LukePage;","import React from 'react';\nimport './App.css';\nimport {\n  HashRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport Kalender from './pages/kalenderPage';\nimport KalenderSelection from './pages/kalenderSelection';\nimport LukePage from './pages/lukePage';\n\n\nfunction genererDatoer(startDato: Date, antall: number):Date[]{\n  const datoer:Date[] = [];\n  for (var i = 0; i < antall; i++) datoer.push(new Date(startDato.getFullYear(),startDato.getMonth(), startDato.getDate()+1))\n  return datoer;\n}\n\nfunction App() {\n  const antallLuker = 24;\n  const lukeTider = genererDatoer(new Date(2021,11,21),24); //[new Date(2021,11,21),new Date(2021,11,22),new Date(2021,11,23),new Date(2021,11,24),new Date(2021,11,25)];\n  const personer = [\"Kristina\",\"Ingrid\",\"Sigrunn\"];\n  return <div className=\"App\">\n    <HashRouter>\n      <Routes> \n      <Route path='/kristina' element={<Kalender number={antallLuker} lukeDates={lukeTider} person={personer[0]}/>}/>\n      <Route path='/kristina/:lukeID' element={<LukePage number={antallLuker} lukeDates={lukeTider} />}/>\n      <Route path='/Ingrid' element={<Kalender number={antallLuker} lukeDates={lukeTider} person={personer[1]}/>}/>\n      <Route path='/Ingrid/:lukeID' element={<LukePage number={antallLuker} lukeDates={lukeTider} />}/>\n      <Route path='/Sigrunn' element={<Kalender number={antallLuker} lukeDates={lukeTider} person={personer[2]}/>}/>\n      <Route path='/Sigrunn/:lukeID' element={<LukePage number={antallLuker} lukeDates={lukeTider} />}/>\n      <Route path='/select' element={<KalenderSelection number={7} personer={personer}/>}/>\n    </Routes>\n  </HashRouter>\n  </div>\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}